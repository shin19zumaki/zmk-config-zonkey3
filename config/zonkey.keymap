#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        msc_up_down: msc_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "MSC_UP_DOWN";
        };

        test: test {
            compatible = "zmk,behavior-hold-tap";
            label = "TEST";
            bindings = <&layer_6to0>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        layer_6to0: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&to 6>,
                <&macro_wait_time 200>,
                <&to 0>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |                        |  Y  |  U   |  I  |  O  |  P  | 
            // |  A  |  S  |  D  |  F  |  G  |LS(LG(S))|        　 | - |  H  |  J   |  K  |  L  |  `  | 
            // |SHIFT|  Z  |  X  |  C  |  V  |  B  |           | ; |  N  |  M   |  ,  |  .  |  /  | 
            // | CTRL | WIN | ALT |HENKAN|SPACE|MUHENKAN|       | BS | ENT |      　　　　       | DEL |           

            bindings = <
&kp Q             &kp W             &kp E             &kp R         &kp T                                                       &kp Y          &kp U        &kp I      &kp O    &kp P
&kp A             &kp S             &kp D             &test 0 F     &kp G        &kp LS(LC(LG(NUMBER_4)))    &kp RIGHT_BRACKET  &kp H          &lt 6 J      &kp K      &kp L    &kp MINUS
&kp LEFT_CONTROL  &kp Z             &kp X             &kp C         &kp V        &kp B                       &kp LEFT_BRACKET   &kp N          &kp M        &kp COMMA  &kp DOT  &mt RIGHT_CONTROL SLASH
&kp LEFT_SHIFT    &mt LEFT_ALT F11  &mt LEFT_GUI F12  &lt 4 ESCAPE  &lt 1 SPACE  &lt 2 TAB                                      &kp BACKSPACE  &lt 1 ENTER                                               &mt RIGHT_SHIFT BACKSLASH
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // | 半角/全角 |CAPS|     |     |     |                     |     |     |  -  |  ^  |  ¥  |
            // | TAB |     |     |     |     |     |              |    |     |     |     |  @  |  [  |
            // |SHIFT|     |     |     |     |     |            | 英数 | かな |     |     |     |  ]  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp N1            &kp N2        &kp N3        &kp N4          &kp N5                                        &kp N6          &kp N7          &kp N8            &kp N9                &kp N0
&kp EXCLAMATION   &kp AT_SIGN   &kp HASH      &kp DOLLAR      &kp PERCENT     &none              &kp PLUS   &kp CARET       &kp AMPERSAND   &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_CONTROL  &kp GRAVE     &kp TILDE     &none           &none           &kp UP_ARROW       &kp EQUAL  &kp SEMICOLON   &kp COLON       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES     &kp RIGHT_CONTROL
&kp LEFT_SHIFT    &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW               &kp LANGUAGE_2  &kp LANGUAGE_1                                                                 &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |                     |  6  |  7  |  8  |  9  |   0  |
            // |      |     |     |     |     |     |           |    |     |     |     |  ↑  |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |  ←  |  ↓  |  →  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&none   &none              &kp LS(LC(LG(NUMBER_3)))  &kp LS(LC(LG(NUMBER_4)))  &kp LS(LG(NUMBER_5))                  &none  &none  &none                   &none                    &none
&none   &kp LA(LC(LG(S)))  &none                     &kp LA(LC(LG(F)))         &none                 &none    &none  &none  &none  &none                   &none                    &none
&trans  &none              &none                     &kp LA(LC(LG(C)))         &none                 &none    &none  &none  &none  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT_ARROW))  &trans
&trans  &trans             &trans                    &none                     &none                 &none           &none  &none                                                           &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_3 {
            bindings = <
&none   &none   &none   &none  &none                  &none  &none  &none  &none  &none
&none   &none   &none   &none  &none  &none    &none  &none  &none  &none  &none  &none
&trans  &none   &none   &none  &none  &none    &none  &none  &none  &none  &none  &trans
&trans  &trans  &trans  &none  &none  &none           &none  &none                        &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_4 {
            bindings = <
&bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &kp LA(LC(LG(U)))  &none  &none  &none
&kp LA(LC(LG(A)))  &none         &none         &none         &none         &none    &none  &none  &none              &none  &none  &none
&trans             &none         &none         &none         &none         &none    &none  &none  &none              &none  &none  &trans
&trans             &trans        &trans        &none         &none         &none           &none  &kp LA(LC(HOME))                         &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        MOUSE {
            bindings = <
&none   &none   &none   &none  &none                  &none  &none     &none     &none     &none
&none   &none   &none   &none  &none  &none    &none  &none  &mkp MB1  &mkp MB2  &mkp MB3  &none
&trans  &none   &none   &none  &none  &none    &none  &none  &none     &none     &none     &trans
&trans  &trans  &trans  &none  &none  &none           &none  &none                                 &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        SCROLL {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |                     |     |     |     |     |      |
            // |      |     |     |     |     |     |           |    |     |     |     |     |      |
            // |SHIFT|     |     |     |     |     |          |     |     |     |     |     |      |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&none   &none   &none   &none  &none                  &none     &none    &none   &none   &none
&none   &none   &none   &none  &none  &none    &none  &none     &trans   &trans  &trans  &none
&trans  &none   &none   &none  &none  &none    &none  &none     &none    &none   &none   &trans
&trans  &trans  &trans  &none  &none  &none           &kp HOME  &kp END                          &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };
    };
};
